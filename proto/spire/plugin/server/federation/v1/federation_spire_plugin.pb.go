// Code generated by protoc-gen-go-spire. DO NOT EDIT.

package federationv1

import (
	pluginsdk "github.com/spiffe/spire-plugin-sdk/pluginsdk"
	grpc "google.golang.org/grpc"
)

func FederationPluginServer(server FederationServer) pluginsdk.PluginServer {
	return federationPluginServer{FederationServer: server}
}

type federationPluginServer struct {
	FederationServer
}

func (s federationPluginServer) Type() string {
	return "Federation"
}

func (s federationPluginServer) GRPCServiceName() string {
	return "spire.plugin.server.federation.v1.Federation"
}

func (s federationPluginServer) RegisterServer(server *grpc.Server) interface{} {
	RegisterFederationServer(server, s.FederationServer)
	return s.FederationServer
}

type FederationPluginClient struct {
	FederationClient
}

func (s FederationPluginClient) Type() string {
	return "Federation"
}

func (c *FederationPluginClient) IsInitialized() bool {
	return c.FederationClient != nil
}

func (c *FederationPluginClient) GRPCServiceName() string {
	return "spire.plugin.server.federation.v1.Federation"
}

func (c *FederationPluginClient) InitClient(conn grpc.ClientConnInterface) interface{} {
	c.FederationClient = NewFederationClient(conn)
	return c.FederationClient
}
